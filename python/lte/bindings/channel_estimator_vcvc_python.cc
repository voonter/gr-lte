/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(channel_estimator_vcvc.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(cc3f5143050f375f6a0f6e0ece56698b)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/lte/channel_estimator_vcvc.h>
// pydoc.h is automatically generated in the build directory
#include <channel_estimator_vcvc_pydoc.h>

void bind_channel_estimator_vcvc(py::module& m)
{

    using channel_estimator_vcvc    = gr::lte::channel_estimator_vcvc;


    py::class_<channel_estimator_vcvc,
        gr::sync_block,
        gr::block,
        gr::basic_block,
        std::shared_ptr<channel_estimator_vcvc>>(m, "channel_estimator_vcvc", D(channel_estimator_vcvc))

        .def(py::init(&channel_estimator_vcvc::make),
           py::arg("rxant"),
           py::arg("subcarriers"),
           py::arg("tag_key"),
           py::arg("msg_buf_name"),
           py::arg("pilot_carriers"),
           py::arg("pilot_symbols"),
           py::arg("name") =  "channel_estimator_vcvc",
           D(channel_estimator_vcvc,make)
        )
        



        ;




}








